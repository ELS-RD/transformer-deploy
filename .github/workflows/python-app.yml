name: tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:

    - uses: actions/checkout@v3

    - uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        cache: 'pip' # caching pip dependencies

    - name: update pip
      run: pip install --upgrade pip
        
    - name: install package dependencies
      run: pip install ".[CPU]" --extra-index-url https://download.pytorch.org/whl/cpu --extra-index-url https://pypi.ngc.nvidia.com

    - name: install test dependencies
      run: pip install sentence-transformers

    - name: linter
      run: make source_code_check_format

    - name: test
      run: make test_ci

    - name: read VERSION file
      id: getversion
      run: echo "::set-output name=version::$(cat VERSION)"

    - name: check version number pattern on main branch
      if: github.ref == 'refs/heads/main'
      shell: bash
      run: echo ${{ steps.getversion.outputs.version }} | grep -P "^\d+\.\d+\.\d+$"

#    - name: Docker meta
#      id: meta
#      uses: docker/metadata-action@v3
#      with:
#        images: |
#          ghcr.io/els-rd/transformer-deploy
#        tags: |
#          type=ref,event=branch
#          type=ref,event=pr
#          type=semver,pattern={{version}}
#          type=semver,pattern={{major}}.{{minor}}
#          type=semver,pattern={{major}}
#          type=sha
#
#    - name: Set up QEMU
#      uses: docker/setup-qemu-action@v1
#
#    - name: Set up Docker Buildx
#      uses: docker/setup-buildx-action@v1
#
#    - name: Login to GHCR
#      uses: docker/login-action@v1
#      with:
#        registry: ghcr.io
#        username: els-lab-ci
#        password: ${{ secrets.XXX }}
#
#    - name: Build and push
#      uses: docker/build-push-action@v2
#      with:
#        context: .
#        # We push only for main and tags
#        push: ${{ github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')) }}
#        tags: ${{ steps.meta.outputs.tags }}
#        labels: ${{ steps.meta.outputs.labels }}
